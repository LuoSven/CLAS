<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAjHOsAIxzpASMc7BkjHO0nIxztJyMc7ScjHOwSIxztAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACMc6wAiG+gEJB3tlSQd7uckHe7jJB3u5SQc7WgkHe4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAIxzrACIb6AQkHe2nJB3u/yQd7v8kHe7/JBztdSQd7gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjHOsAIhvoBCQd7ackHe7/JB3u/yQd7v8kHO10JB3uAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMc6wAiG+gEJB3tpyQd7v8kHe7/JB3u/yQc
        7XQkHe4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIxzrACIb6AQkHe2nJB3u/yQd
        7v8kHe7/JBztdCQd7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjHOsAIhvoBCQd
        7ackHe7/JB3u/yQd7v8kHO10JB3uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMc
        6wAiG+gEJB3tpiQd7v8kHe7/JB3u/yQc7XQkHe4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJB3tACMd7SkjHe1hIx3tYSMd7WEjHe1hIx3tYSMd
        7WEjHe1hIx3tYCMd7WMkHe3IJB3u/yQd7v8kHe7/JB3tqSMd7V4jHe1hIx3tYSMd7WEjHe1hJB3tXyQc
        7UQjHOwSJRzwACEd6QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlHe8AIx3taiQd7v0kHe79JB3u/SQd
        7vwkHe77JB3u+yQd7vskHe77JB3u+yQd7v4kHe7/JB3u/yQd7v8kHe79JB3u+yQd7vskHe77JB3u+yQd
        7v0kHe79JB3u9CQd7rsjHO0vJB3tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUd7wAkHe1rJB3u/yQd
        7v8kHe7/JB3uvSMd7V0jHe1cIx3tXCMd7VwjHe1fJB3uxyQd7v8kHe7/JB3u/yQd7aYjHe1aIx3tXCMd
        7VwjHe1bIx3tgCQd7vIkHe7/JB3u/yQd7q8jHOwKIxztAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR3vACMd
        7WskHe7/JB3u/yQd7v8kHe2YGx3cASMd7AAAAAAAIxzrACIb6AQkHe2mJB3u/yQd7v8kHe7/JBztdCQd
        7gAAAAAAAAAAACMd7AAjHewfJB3u2yQd7v8kHe7/JB3u5yMc7S0jHO0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAlHe8AIx3tayQd7v8kHe7/JB3u/yQd7ZgcHd4BIx3sAAAAAAAjHOsAIhvoBCQd7ackHe7/JB3u/yQd
        7v8kHO10JB3uAAAAAAAAAAAAIx3sACMd7B0kHe7ZJB3u/yQd7v8kHe7xJBztPCQc7QAAAAAAAAAAAAAA
        AAAAAAAAAAAAACUd7wAjHe1rJB3u/yQd7v8kHe7/JB3tmBwd3gEjHewAAAAAACMc6wAiG+gEJB3tpyQd
        7v8kHe7/JB3u/yQc7XQkHe4AAAAAAAAAAAAjHewAIx3sHSQd7tkkHe7/JB3u/yQd7vEkHO08JBztAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAJR3vACMd7WskHe7/JB3u/yQd7v8kHe2YHB3eASMd7AAAAAAAIxzrACIb
        6AQkHe2nJB3u/yQd7v8kHe7/JBztdCQd7gAAAAAAAAAAACMd7AAjHewdJB3u2SQd7v8kHe7/JB3u8SQc
        7TwkHO0AAAAAAAAAAAAAAAAAAAAAAAAAAAAlHe8AIx3tayQd7v8kHe7/JB3u/yQd7ZgcHd4BIx3sAAAA
        AAAjHOsAIhvoBCQd7ackHe7/JB3u/yQd7v8kHO10JB3uAAAAAAAAAAAAIx3sACMd7B0kHe7ZJB3u/yQd
        7v8kHe7xJBztPCQc7QAAAAAAAAAAAAAAAAAAAAAAAAAAACUd7wAjHe1rJB3u/yQd7v8kHe7/JB3tmBwd
        3gEjHewAAAAAACMc6wAiG+gEJB3tpyQd7v8kHe7/JB3u/yQc7XQkHe4AAAAAAAAAAAAjHewAIx3sHSQd
        7tkkHe7/JB3u/yQd7vEkHO08JBztAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR3vACMd7WskHe7/JB3u/yQd
        7v8kHe2YHB3eASMd7AAAAAAAIxzrACIb6AQkHe2nJB3u/yQd7v8kHe7/JBztdCQd7gAAAAAAAAAAACMd
        7AAjHewdJB3u2SQd7v8kHe7/JB3u8SQc7TwkHO0AAAAAAAAAAAAAAAAAAAAAAAAAAAAlHe8AIx3tayQd
        7v8kHe7/JB3u/yQd7ZgcHd0BIx3sAAAAAAAjHOsAIhvoBCQd7ackHe7/JB3u/yQd7v8kHO10JB3uAAAA
        AAAAAAAAIx3sACMd7B0kHe7ZJB3u/yQd7v8kHe7tJBztNiQc7QAAAAAAAAAAAAAAAAAAAAAAAAAAACUd
        7wAjHe1rJB3u/yQd7v8kHe7/JB3toiMd7BgjHewXIx3sFyMd7BcjHOwbJB3tryQd7v8kHe7/JB3u/yQd
        7YEjHewUIx3sFyMd7BcjHOwWIx3tSiQd7uokHe7/JB3u/yQd7skjHOwVIxztAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJR3vACMd7WskHe7/JB3u/yQd7v8kHe7xJB3u2iQd7tkkHe7ZJB3u2SQd7tokHe7yJB3u/yQd
        7v8kHe7/JB3u6yQd7tkkHe7ZJB3u2SQd7tokHe7tJB3u/yQd7v4kHe7eJB3tUSQf8wAjHOoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAlHe4AIx3tOCQd7YYkHe2GJB3thiQd7YckHe2IJB3tiCQd7YgkHe2IJB3tiiQd
        7tYkHe7/JB3u/yQd7v8kHe6+JB3thiQd7YgkHe2IJB3tiCQd7YckHe2FJB3tbCMc7CshHOsCIhzsAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMc
        6wAiG+gEJB3tpiQd7v8kHe7/JB3u/yQd7XQkHe4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIxzrACIb6AQkHe2nJB3u/yQd7v8kHe7/JBztdCQd7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAjHOsAIhvoBCQd7ackHe7/JB3u/yQd7v8kHO11JB3uAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACMc6wAjG+gDJB3tfyQd7cYkHe3DJB3txCQd7VkkHe0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBvqACUZ6AAjHesJIx3sDSMd7A0jHewNIx3sBiMd
        7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////8D////A////wP///8D////A////wP///8D////A//+AA
        AD/gAAAf4AAAD+BwPA/gcDwP4HA8D+BwPA/gcDwP4HA8D+BwPA/gcDwP4AAAD+AAAB/gAAAf//A////w
        P///8D////A////wP/////////////////8=
</value>
  </data>
</root>